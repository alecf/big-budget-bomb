name: Build and Test

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]

jobs:
  build-nodejs:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [22]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Build application
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == 22
      with:
        name: build-files
        path: |
          .next/
          !.next/cache/
        retention-days: 7

  build-python:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.13"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        cd python
        pip install -e .[dev]
    
    - name: Run Python linter (flake8)
      run: |
        cd python
        flake8 src/ tests/
    
    - name: Run Python formatter check (black)
      run: |
        cd python
        black --check src/ tests/
    
    - name: Run Python import sorting check (isort)
      run: |
        cd python
        isort --check-only src/ tests/
    
    - name: Run Python type checking (mypy)
      run: |
        cd python
        mypy src/
    
    - name: Run Python tests
      run: |
        cd python
        pytest tests/ --cov=src --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.13'
      with:
        file: python/coverage.xml
        flags: python
        name: python-coverage
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: [build-nodejs, build-python]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
        cache: 'pip'
    
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        cd python
        pip install -e .[dev]
    
    - name: Build Next.js application
      run: npm run build
    
    - name: Run integration tests (if any)
      run: |
        echo "Integration tests would run here"
        # Add any integration test commands that require both Node.js and Python